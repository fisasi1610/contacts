"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Overview =
/*#__PURE__*/
function () {
  function Overview() {
    _classCallCheck(this, Overview);

    this.config = $.extend(true, APP, {});
    this.$form = $("#form-search");
    this.$cboAncho = this.$form.find("#ancho");
    this.$cboPerfil = this.$form.find("#perfil");
    this.$cboAro = this.$form.find("#aro");
    this.$btnSearch = this.$form.find("#btnSearch");
  }

  _createClass(Overview, [{
    key: "initSelect",
    value: function initSelect() {
      var _this = this;

      this.$cboAncho.on("change", function (e) {
        var elem = e.currentTarget;
        $.get("".concat(_this.config.url.controllerFullUrl, "/listPerfil/ancho/") + $(elem).val(), function (response) {
          if (!response.error) {
            Notify("success", response.message);

            _this.$cboPerfil.empty().append("<option>Seleccione...</option>").attr("disabled", false);

            $.each(response.data, function (k, v) {
              _this.$cboPerfil.append("<option value=" + v.term_id + ">" + v.name + "</option>");
            });
          }
        }).fail(function (error) {
          Notify("error", error.responseJSON.message);
        });
      });
      this.$cboPerfil.on("change", function (e) {
        var elem = e.currentTarget;
        $.get("".concat(_this.config.url.controllerFullUrl, "/listAro/ancho/") + _this.$cboAncho.val() + '/perfil/' + $(elem).val(), function (response) {
          if (!response.error) {
            Notify("success", response.message);

            _this.$cboAro.empty().append("<option>Seleccione...</option>").attr("disabled", false);

            $.each(response.data, function (k, v) {
              _this.$cboAro.append("<option value=" + v.term_id + ">" + v.name + "</option>");
            });
          }
        }).fail(function (error) {
          Notify("error", error.responseJSON.message);
        });
      });
    }
  }, {
    key: "initSearch",
    value: function initSearch() {
      var _this2 = this;

      this.$btnSearch.on("click", function () {
        var ancho = _this2.$cboAncho.find("option:selected").text();

        var perfil = _this2.$cboPerfil.find("option:selected").text();

        var aro = _this2.$cboAro.find("option:selected").text();

        var url = "http://box5240.temp.domains/~autoprim/tienda/?filter_aro=" + aro + "&filter_perfil=" + perfil + "&filter_ancho=" + ancho;
        window.open(url, '_self');
      });
    }
  }, {
    key: "init",
    value: function init() {
      this.initSelect();
      this.initSearch();
    }
  }]);

  return Overview;
}();

$(function () {
  new Overview().init();
});