"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Pace =
/*#__PURE__*/
function () {
  function Pace() {
    _classCallCheck(this, Pace);

    this.$window = $(window);
    this.$preloader = $("#svays-preload.preload");
    this.$preloaderImg = $("#svays-preload.preload .spinner");
    this.init();
  }

  _createClass(Pace, [{
    key: "init",
    value: function init() {
      var _this = this;

      this.$window.on("load", function () {
        _this.$preloaderImg.fadeOut();

        _this.$preloader.delay(350).fadeOut('slow');
      });
    }
  }]);

  return Pace;
}();

new Pace(); // Main JavaScripts

(function ($) {
  'use strict'; // Side Nav

  function sideNav() {
    $('.side-nav .side-nav-menu li a').on('click', function (e) {
      if ($(this).parent().hasClass("open")) {
        $(this).parent().children('.dropdown-menu').slideUp(200, function () {
          $(this).parent().removeClass("open");
        });
      } else {
        $(this).parent().parent().children('li.open').children('.dropdown-menu').slideUp(200);
        $(this).parent().parent().children('li.open').children('a').removeClass('open');
        $(this).parent().parent().children('li.open').removeClass("open");
        $(this).parent().children('.dropdown-menu').slideDown(200, function () {
          $(this).parent().addClass("open");
        });
      }
    });
  } // Side Nav Toogle


  function sideNavToggle() {
    $('.side-nav-toggle').on('click', function (e) {
      $('.app').toggleClass("is-collapsed");
      e.preventDefault();
    });
  } // Side Panel Toogle


  function sidePanelToggle() {
    $('.side-panel-toggle').on('click', function (e) {
      $('.side-panel').toggleClass("side-panel-open");
      e.preventDefault();
    });
  } // Perfect Scroll Bar


  function perfectSB() {
    $('.scrollable').perfectScrollbar();
  } //Card Portlet Refresh


  function cardPortletCtrl() {
    //card refresh
    $('[data-toggle=card-refresh]').on('click', function (e) {
      var cardRefreshSelector = $(this).parents('.card');
      cardRefreshSelector.addClass('card-refresh');
      window.setTimeout(function () {
        cardRefreshSelector.removeClass('card-refresh');
      }, 2000);
      e.preventDefault();
      e.stopPropagation();
    }); //card delete

    $('[data-toggle=card-delete]').on('click', function (e) {
      var cardDeleteSelector = $(this).parents('.card');
      cardDeleteSelector.addClass('animated zoomOut');
      cardDeleteSelector.bind('animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd', function () {
        cardDeleteSelector.remove();
      });
      e.preventDefault();
      e.stopPropagation();
    });
  }

  function init() {
    sideNav();
    sideNavToggle();
    sidePanelToggle();
    perfectSB();
    cardPortletCtrl();
  }

  init();
})(jQuery);

var NavigationFavorite =
/*#__PURE__*/
function () {
  function NavigationFavorite(options) {
    _classCallCheck(this, NavigationFavorite);

    this.options = options;
    this.$body = $("body");
    this.$star = $("#navigation-favorite i");
    this.navigations = $("#navigation-favorite-content");
    this.$btnAdd = $("#navigation-add-favorite");
  }

  _createClass(NavigationFavorite, [{
    key: "_template_link",
    value: function _template_link(url, name) {
      return "\n    <li>\n      <a class=\"dropdown-item\" href=\"".concat(url, "\">\n        <i class=\"ti-link\"></i>&nbsp;\n        ").concat(name, "\n      </a>\n    </li>\n    ");
    }
  }, {
    key: "_template_modal",
    value: function _template_modal(url) {
      return "\n    <div class=\"modal fade\" id=\"md-navigation-favorite\">\n      <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h4>Nuevo Acceso directo</h4>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"form-group\">\n              <label class=\"control-label\">Nombre del acceso directo</label>\n              <div>\n                <input type=\"hidden\" id=\"navigation_favorite_url\" value=\"".concat(url, "\"/>\n                <input type=\"text\" id=\"navigation_favorite_name\" class=\"form-control\" placeholder=\"Escriba un nombre para el acceso directo\"/>\n              </div>\n            </div>\n          </div>\n          <button id=\"navigation-favorite-save\" class=\"btn btn-success btn-block no-mrg no-border pdd-vertical-15 ng-scope\">\n            <ic class=\"fa fa-save\"></i>&nbsp;\n            <span class=\"text-uppercase\">Crear Acceso directo</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    ");
    }
  }, {
    key: "_create_favorite",
    value: function _create_favorite(url, name) {
      var _this2 = this;

      $.post("".concat(this.options.url.baseFullUrl, "/user/navigation/saveFavorite"), {
        favorite: {
          url: url,
          name: name
        }
      }, function (response) {
        if (!response.error) {
          Notify("success", "Se ha creado correctamente el acceso directo");

          _this2.navigations.prepend(_this2._template_link(url, name));

          _this2._active();
        }
      }).fail(function (error) {
        Notify("error", error.ResponseJSON.message);
      });
    }
  }, {
    key: "_active",
    value: function _active() {
      this.$star.attr("class", "fa fa-star text-warning");
      $(".navigation-favorite").remove();
      $("#md-navigation-favorite").modal("hide");
      $('#md-navigation-favorite').on('hidden.bs.modal', function (e) {
        $("#md-navigation-favorite").remove();
      });
    }
  }, {
    key: "_init_modal",
    value: function _init_modal() {
      var _this3 = this;

      if (this.$btnAdd.length != 0) {
        var url = this.$btnAdd.attr("data-url");
        this.$body.append(this._template_modal(url));
        this.$btnAdd.on("click", function () {
          $("#md-navigation-favorite").modal("show");
        });
        $("#md-navigation-favorite").find("button#navigation-favorite-save").on("click", function () {
          var url = $("#navigation_favorite_url").val();
          var value = $("#navigation_favorite_name").val();

          if ($.trim(value) == "") {
            $("#navigation_favorite_name").focus();
          } else {
            _this3._create_favorite(url, value);
          }
        });
      }
    }
  }, {
    key: "init",
    value: function init() {
      this._init_modal();
    }
  }]);

  return NavigationFavorite;
}();

var Notifications =
/*#__PURE__*/
function () {
  function Notifications(options) {
    _classCallCheck(this, Notifications);

    this.options = options;
    this.$body = $("body");
    this.firebase = firebase.initializeApp(this.options["default"].firebase);
    this.alert;
    this.typeUser = this.$body.attr("data-notification");
    this.view = false;
  }

  _createClass(Notifications, [{
    key: "setAlert",
    value: function setAlert(alert) {
      this.alert = alert;
    }
  }, {
    key: "_templateNotification",
    value: function _templateNotification(data) {
      return "\n      <div class=\"media\">\n        <img class=\"mr-3\" src=\"".concat(data.img_profile, "\" width=\"38\" height=\"38\">\n        <div class=\"media-body\">\n          <h6 class=\"mt-0 mb-0\">").concat(data.name, "</h6>\n          <div>").concat(data.message, "</div>\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "_change",
    value: function _change(notifications) {
      var _this4 = this;

      notifications.limitToLast(1).on("child_added", function (data) {
        if (_this4.view) {
          _this4.alert(data.val().type, _this4._templateNotification(data.val()), "bottomLeft");
        }

        _this4.view = true;
      });
    }
  }, {
    key: "init",
    value: function init() {
      var notifications = this.firebase.database().ref("notifications");

      if (this.typeUser == 1 || this.typeUser == 2) {
        this._change(notifications);
      }
    }
  }]);

  return Notifications;
}(); //@import-prepend "modules/_pace.js"
//@import-prepend "espire/app.js"
//@import-prepend "modules/_navigation_favorite.js"
//@import-prepend "modules/_notifications.js"


var APP = APP || {};
APP = {
  url: {
    hostUrl: Request.Host,
    baseUrl: Request.BaseUrl,
    baseFullUrl: Request.Host + Request.BaseUrl,
    moduleUrl: Request.UrlHash.m,
    moduleFullUrl: Request.Host + Request.BaseUrl + '/' + Request.UrlHash.m,
    controllerUrl: Request.UrlHash.c,
    controllerFullUrl: Request.Host + Request.BaseUrl + '/' + Request.UrlHash.m + '/' + Request.UrlHash.c
  },
  "default": {
    bootstrapTable: {
      escape: false,
      locale: 'es-SP',
      search: true,
      searchAlign: 'left',
      sortOrder: "desc",
      sortable: true,
      pagination: true,
      pageSize: 20
    },
    noty: {
      theme: 'nest',
      timeout: 3000,
      layout: "topRight",
      closeWith: ['button', 'click'],
      animation: {
        open: 'noty-animation fadeIn',
        close: 'noty-animation fadeOut'
      }
    },
    //    firebase : {
    //      apiKey: "AIzaSyAAeDcQgDYWyG6qaxR4CJpKAX5gKx8onkY",
    //      authDomain: "my-application-5a523.firebaseapp.com",
    //      databaseURL: "https://my-application-5a523.firebaseio.com",
    //      projectId: "my-application-5a523",
    //      storageBucket: "my-application-5a523.appspot.com",
    //      messagingSenderId: "516977028454"
    //    },
    firebase: {
      apiKey: "AIzaSyBdzhojtIejGQkRORLiG-aGvcdcaKFvCL8",
      authDomain: "my-application-bba3f.firebaseapp.com",
      databaseURL: "https://my-application-bba3f.firebaseio.com",
      projectId: "my-application-bba3f",
      storageBucket: "my-application-bba3f.appspot.com",
      messagingSenderId: "911248667704"
    }
  }
};

var Notify = function Notify(type, msg) {
  var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "topRight";
  var opt = APP["default"].noty;
  opt.text = msg;
  opt.type = type;
  opt.layout = position;
  new Noty(opt).show();
};

jQuery(document).ajaxComplete(function (event, request, options) {
  if (request.responseText == "LOGIN_REQUIRED") {
    swal({
      title: "Advertencia!",
      type: "warning",
      html: "<h4 class='text-center'>La sesión ha expirado. Inicie sesión nuevamente, por favor.</h4>",
      allowOutsideClick: false,
      allowEscapeKey: false,
      confirmButtonText: 'Aceptar',
      onOpen: function onOpen() {
        swal.hideLoading();
      }
    }).then(function (result) {
      if (result.value) {
        window.location.reload();
      }
    });
  }
});
var notification = new Notifications(APP);
notification.setAlert(Notify);
notification.init();
var navigationfavorites = new NavigationFavorite(APP);
navigationfavorites.init();