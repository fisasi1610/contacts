"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AlertPlugin =
/*#__PURE__*/
function () {
  function AlertPlugin() {
    _classCallCheck(this, AlertPlugin);

    this.$options = {};
  }

  _createClass(AlertPlugin, [{
    key: "_getOptions",
    value: function _getOptions() {
      return this.$options;
    }
  }, {
    key: "_setOptions",
    value: function _setOptions(params) {
      this.$options = $.extend(true, this.$options, params);
    }
  }, {
    key: "loading",
    value: function loading() {
      var defaultOptions = {
        title: '¡Cargando!',
        html: '',
        type: 'info',
        text: 'Por favor, espere...',
        showCancelButton: false,
        showConfirmButton: false,
        allowOutsideClick: false,
        onOpen: function onOpen() {
          swal.showLoading();
        }
      };

      this._setOptions(defaultOptions);

      swal(this._getOptions());
    }
  }, {
    key: "confirm",
    value: function confirm() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var cbSuccess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (result) {
        console.log(result);
      };
      var cbCancel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (result) {
        console.log(result);
      };
      var defaultOptions = {
        title: params.title || '¡Advertencia!',
        html: params.text || '',
        type: params.type || 'question',
        showCancelButton: true,
        cancelButtonText: params.cancelButtonText || 'Cancelar',
        confirmButtonText: params.confirmButtonText || 'Confirmar'
      };

      this._setOptions(defaultOptions);

      swal(this._getOptions()).then(function (result) {
        if (result.value) {
          cbSuccess(result);
        } else if (result.dismiss === 'cancel') {
          cbCancel(result);
        }
      });
    }
  }, {
    key: "show",
    value: function show() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var cbSuccess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (result) {
        console.log(result);
      };
      var defaultOptions = {
        title: params.title || '¡Conforme!',
        html: params.text || '',
        type: params.type || 'success',
        confirmButtonText: params.confirmButtonText || 'Aceptar',
        width: "22rem"
      };

      this._setOptions(defaultOptions);

      swal(this._getOptions()).then(function (result) {
        if (result.value) {
          cbSuccess(result);
        }
      });
    }
  }, {
    key: "close",
    value: function close() {
      swal.close();
    }
  }]);

  return AlertPlugin;
}();